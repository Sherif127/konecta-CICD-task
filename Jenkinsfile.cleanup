pipeline {
  agent {
    docker {
      image 'amazon/aws-cli:latest'
      args '--entrypoint="" -u root'
    }
  }
  environment {
    AWS_REGION = 'us-east-1'
  }
  stages {
    stage('Discover ephemeral EC2s') {
      steps {
        withCredentials([
          string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
          string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY'),
          string(credentialsId: 'AWS_SESSION_TOKEN', variable: 'AWS_SESSION_TOKEN')
        ]) {
          sh '''
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN

            instanceIds=$(aws ec2 describe-instances \
              --region ${AWS_REGION} \
              --filters "Name=tag:lifespan,Values=ephemeral" \
                        "Name=tag:owner,Values=jenkins" \
                        "Name=instance-state-name,Values=pending,running,stopping,stopped" \
              --query "Reservations[*].Instances[*].InstanceId" \
              --output text)

            if [ -n "$instanceIds" ]; then
              echo "Found ephemeral instances: $instanceIds"
              aws ec2 terminate-instances --instance-ids $instanceIds
              echo "Termination initiated."
            else
              echo "No ephemeral instances found."
            fi
          '''
        }
      }
    }
  }
}
